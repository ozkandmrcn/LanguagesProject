package enoca.enoca.business.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import enoca.enoca.business.abstracts.LanguageService;
import enoca.enoca.business.requests.languages.CreateLanguageRequest;
import enoca.enoca.business.requests.languages.UpdateLanguageRequest;
import enoca.enoca.business.response.languages.GetAllLanguagesResponse;
import enoca.enoca.business.response.languages.GetLanguageByIdResponse;
import enoca.enoca.dataAccess.abstracts.LanguageRepository;
import enoca.enoca.entities.concretes.Language;

@Service
public class LanguageManager implements LanguageService{
	
	private LanguageRepository languageRepository;
	
    public LanguageManager(LanguageRepository languageRepository) {
        this.languageRepository = languageRepository;
    }

	@Override
	public List<GetAllLanguagesResponse> getAll() {
		
		List<Language> languages=languageRepository.findAll();
		List<GetAllLanguagesResponse> result=new ArrayList<GetAllLanguagesResponse>();
		
		for(Language language : languages)
		{
			GetAllLanguagesResponse responseItem=new GetAllLanguagesResponse();
			responseItem.setId(language.getId());
			responseItem.setName(language.getName());
			
			result.add(responseItem);
			
		}
		
		
		return result;
	}

	@Override
	public GetLanguageByIdResponse getById(int id) {
		
		Language language=languageRepository.findById(id).get();
		
		GetLanguageByIdResponse byIdResponse=new GetLanguageByIdResponse();
		byIdResponse.setId(language.getId());
		byIdResponse.setName(language.getName());
		
		
		return byIdResponse;
	}

	@Override
	public CreateLanguageRequest create(CreateLanguageRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public UpdateLanguageRequest update(UpdateLanguageRequest request, int id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void delete(int id) {
		// TODO Auto-generated method stub
		
	}

}
