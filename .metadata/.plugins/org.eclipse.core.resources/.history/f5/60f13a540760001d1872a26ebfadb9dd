package enoca.enoca.webApi.controllers;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import enoca.enoca.business.abstracts.TechnologyService;
import enoca.enoca.business.requests.technologies.CreateTechnologyRequest;
import enoca.enoca.business.requests.technologies.UpdateTechnologyRequest;
import enoca.enoca.business.response.technologies.GetAllTechnologiesResponse;
import enoca.enoca.business.response.technologies.GetTechnologyByIdResponse;

/*@RestController
@RequestMapping("/api/v1/technologies")*/
public class TechnologiesController {
	
	 private final TechnologyService technologyService;
    public TechnologiesController(TechnologyService technologyService) {
	        this.technologyService = technologyService;	    }
	    	    @GetMapping(name = "GetAllTechnologies")
    public List<GetAllTechnologiesResponse> getAll() {
	        return technologyService.getAll();
	    }

	    @GetMapping(name = "GetTechnologyById", path = "/{id}")
	    public GetTechnologyByIdResponse getById(@PathVariable int id) {
	        return technologyService.getById(id);
    }
	    @PostMapping(name = "CreateTechnology")
	    @ResponseStatus(code = org.springframework.http.HttpStatus.CREATED)    public CreateTechnologyRequest create(@RequestBody CreateTechnologyRequest technology) {
        return technologyService.create(technology);
//	    }
//
//	    @PutMapping(name = "UpdateTechnology", path = "/{id}")
//	    public UpdateTechnologyRequest update(@RequestBody UpdateTechnologyRequest technology, @PathVariable int id) {
//	        return technologyService.update(technology, id);
//	    }
//
//	    @DeleteMapping(name = "DeleteTechnology", path = "/{id}")
//	    @ResponseStatus(code = org.springframework.http.HttpStatus.NO_CONTENT)
//	    public void delete(@PathVariable int id) {
//	        technologyService.delete(id);
//	    }

}
